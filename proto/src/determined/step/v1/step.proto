syntax = "proto3";

package determined.step.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/stepv1";

import "google/protobuf/struct.proto";
import "determined/experiment/v1/experiment.proto";
import "determined/checkpoint/v1/checkpoint.proto";
import "google/protobuf/timestamp.proto";

// The current state of the step.
/* enum state { */
/*     // The state of the step is unknown. */
/*     STATE_UNSPECIFIED = 0; */
/*     // The step is in an active state. */
/*     STATE_ACTIVE = 1; */
/*     // The step is in a paused state */
/*     STATE_PAUSED = 2; */
/*     // The step is completed and is shutting down. */
/*     STATE_STOPPING_COMPLETED = 3; */
/*     // The step is canceled and is shutting down. */
/*     STATE_STOPPING_CANCELED = 4; */
/*     // The step is errored and is shutting down. */
/*     STATE_STOPPING_ERROR = 5; */
/*     // The step is completed and is shut down. */
/*     STATE_COMPLETED = 6; */
/*     // The step is canceled and is shut down. */
/*     STATE_CANCELED = 7; */
/*     // The step is errored and is shut down. */
/*     STATE_ERROR = 8; */
/*     // The step has been deleted. */
/*     STATE_DELETED = 9; */
/* } */

/* message Metric { */
/*   string name = 1; */
/*   double value = 2; */
/* } */


message Validation {
  int32 id = 1;
  // state
  int32 num_inputs = 2;
  repeated string validation_metrics = 3;
  // state
  // start & end time
}

message Checkpoint {
  int32 id = 1;
  string uuid = 2;
  // resources
  // state
  // start & end time
}

// Step is a collection of one or more steps that are exploring a user-defined
// hyperparameter space.
message Step {
  // The id of the step.
  int32 id = 1;
  int32 trial_id = 2;
  // The time the step was started.
  google.protobuf.Timestamp start_time = 3;
  // The time the step ended if the step is stopped.
  google.protobuf.Timestamp end_time = 4;
  // The current state of the step.
  /* state state = 5; */
  int32 num_batches = 6;
  int32 prior_batches_processed = 7;
  /* int32 validation */
  /* checkpoint */
  /* repeated average_metrics */ 
}
